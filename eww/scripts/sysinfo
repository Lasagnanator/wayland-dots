#!/usr/bin/env python

import psutil
import json
import subprocess
import os
import time
from dataclasses import dataclass

@dataclass
class Sysinfo:
    cpu: int
    mem: int
    temp: int
    disk: int
    bat1: int
    bat2: int


if __name__ == "__main__":
    while True:
        sysinfo = Sysinfo(
            cpu  = int(round(psutil.cpu_percent(interval=1), 0)),
            mem  = int(round(psutil.virtual_memory().percent, 0)),
            temp = int(round(psutil.sensors_temperatures()['coretemp'][0].current, 0)),
            disk = int(round(psutil.disk_usage('/').percent, 0)),
            bat1 = None,
            bat2 = None
        )

        with open('/sys/class/power_supply/BAT1/capacity', 'r') as f:
            sysinfo.bat1 = f.read().strip('\n')
        if int(sysinfo.bat1) <= 20 and not os.environ.get('BAT0_NOTIFIED'):
            subprocess.run(['notify-send', 'WARNING', 'First battery low!'])
            os.environ['BAT0_NOTIFIED'] = 'True'
        elif int(sysinfo.bat1) > 20 and os.environ.get('BAT0_NOTIFIED'):
            os.environ['BAT0_NOTIFIED'] = ''

        with open('/sys/class/power_supply/BAT0/capacity', 'r') as f:
            sysinfo.bat2 = f.read().strip('\n')
        if int(sysinfo.bat2) <= 20 and not os.environ.get('BAT1_NOTIFIED'):
            subprocess.run(['notify-send', 'WARNING', 'Second battery low!'])
            os.environ['BAT1_NOTIFIED'] = 'True'
        elif int(sysinfo.bat2) > 20 and os.environ.get('BAT1_NOTIFIED'):
            os.environ['BAT1_NOTIFIED'] = ''

        print(json.dumps(sysinfo.__dict__), flush=True)
        time.sleep(1)

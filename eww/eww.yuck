;; EWW, KRAKEN'S BILE ;;

;; WINDOWS ;;

(defwindow  bar
            :monitor    0
            :stacking   "bottom"
            :exclusive  true
            :focusable  false
            :geometry   (geometry :width "100%"
                                  :height "32px"
                                  :anchor "top center")
            (bar_layout :monitor 0))

;; LAYOUTS ;;

(defwidget bar_layout [monitor]
  (centerbox :class "layout-box"
       :orientation "horizontal"
       (left)
       (center :monitor monitor)
       (right)))

(defwidget left []
  (box :class "left-widgets"
       :orientation "horizontal"
       :space-evenly false
       :halign "start"
       (current_window)))

(defwidget center [monitor]
  (box :class "center-widgets"
       :orientation "horizontal"
       (workspaces :monitor monitor)))

(defwidget right []
  (box :class "right-widgets"
       :orientation "horizontal"
       :space-evenly false
       :halign "end"
       (volume)
       (brightness)
       (ram)
       (cpu)
       (temp)
       (batteries)
       (time)))

; VARIABLES
(deflisten hyprinfo "scripts/hyprinfo")
(deflisten sysinfo "scripts/sysinfo")
(deflisten brightness "scripts/brightness")
(deflisten volume "scripts/volume")

(defpoll datetime :initial "No time"
                  :interval "1s"
                  "date '+%a, %d %b %H:%M'")
(defpoll time :initial "No time"
              :interval "1s"
              "date '+%H:%M'")
;; WIDGETS ;;

(defwidget current_window []
  (label :text "${hyprinfo.window.classname == "Null" ? "~" : hyprinfo.window.classname}"
         :class "info title"))

(defwidget workspaces [?monitor]
  (box :space-evenly true
       (for workspace in {hyprinfo.workspaces}
         (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
                   (label :text "${workspace.id == hyprinfo.monitors[monitor].active_workspace ? " 󰮯 " : "${workspace.windows > 0 ? " 󰊠 " : " 󰧟 "}"}"
                      :class "workspace-entry ${workspace.id == hyprinfo.monitors[monitor].active_workspace ? "current" : "${workspace.windows > 0 ? "occupied" : "empty"}"}")))))

(defwidget datetime []
  (label :text "${datetime}"
         :class "info"))

(defwidget time []
  (label :text "${time}"
         :class "info"))

(defwidget batteries []
  (box :space-evenly false
       :class "info"
       (label :text "󰁹"
            :class "icon")
       (label :text "${sysinfo.bat1}/${sysinfo.bat2}%"
              :class "text")))
    

(defwidget ram []
  (box :space-evenly false
       :class "info"
       (label :text "󰘚"
              :class "icon")
       (label :text "${sysinfo.mem}%"
              :class "text")))

(defwidget cpu []
  (box :space-evenly false
       :class "info"
       (label :text "󰍛"
              :class "icon")
       (label :text "${sysinfo.cpu > 0 ? sysinfo.cpu : 1}%"
              :class "text")))

(defwidget temp []
  (box :space-evenly false
       :class "info"
       (label :text "󰔐"
              :class "icon")
       (label :text "${sysinfo.temp}°C"
              :class "text")))

(defwidget volume []
  (box :space-evenly false
       :class "info"
       (label :text "${volume == "MUTE" ? "󰖁" : "󰕾"}"
              :class "icon")
       (label :text "${volume}${volume == "MUTE" ? "" : "%"}"
              :class "text")))

(defwidget brightness []
  (box :space-evenly false
       :class "info"
       (label :text "󰖙"
              :class "icon")
       (label :text "${brightness}%"
              :class "text")))


;; TEST ;;

(defwidget json_widget []
  (eventbox :onclick "echo ${EWW_TEMPS} > scripts/eww_temps"
    (box :space-evenly true
      (label :text "Dump temps"))))
      ;; (label :text "${EWW_TEMPS.thinkpad_cpu}"))))

